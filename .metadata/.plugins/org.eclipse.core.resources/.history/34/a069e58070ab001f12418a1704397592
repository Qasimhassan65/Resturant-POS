package com.example.demo.Service;

import com.example.demo.model.User;
import com.example.demo.repository.UserRepository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    // Register a new user
    public String registerUser(User user) {
        // Check if the email already exists
        if (userRepository.findByEmail(user.getEmail()) != null) {
            return "User with this email already exists!";
        }

        // Save the user if the email doesn't exist
        userRepository.saveUser(user);
        return "User registered successfully!";
    }

    // Login a user (For simplicity, just check email and password)
    public String loginUser(String email, String password) {
        User user = userRepository.findByEmail(email);
        
        if (user.getPassword().equals(password)) {
            return "Login successful!";
        }
        return "Invalid email or password!";
    }
    
    public Long getTotalStaff(){
    	return userRepository.calculateTotalStaff("staff member");
    }
    
    public void deleteUserByEmail(String email) {
        try {
            int deletedCount = userRepository.deleteUserByEmail(email);

            if (deletedCount == 0) {
                throw new RuntimeException("No user found with email: " + email);
            }
        } catch (Exception e) {
            // Log the error
            System.err.println("Error in UserService while deleting user with email " + email + ": " + e.getMessage());
            // Re-throw the exception to be handled by the controller
            throw new RuntimeException("Error deleting user with email " + email, e);
        }
    }
    
    public List<User> getUsers() {
        // Example logic that simulates checking each user's role or status
        List<User> users = userRepository.getUsers();
        return users;
    }

}
